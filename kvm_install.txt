
https://www.linuxtechi.com/install-kvm-hypervisor-on-centos-7-and-rhel-7/

yum install update
yum install net-tools -y

mount -t iso9660 /dev/sr0 /mnt/vmcd/

10.59.34.4 kvm2 (oracle)


 eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc mq state UP group default qlen 1000
    link/ether 00:15:5d:56:cd:13 brd ff:ff:ff:ff:ff:ff
    inet 192.168.86.39/24 brd 192.168.86.255 scope global noprefixroute dynamic eth0
       valid_lft 86318sec preferred_lft 86318sec
    inet6 fe80::bdf6:bea7:cff1:637d/64 scope link noprefixroute
       valid_lft forever preferred_lft forever



       grep -E '(vmx|svm)' /proc/cpuinfo

       ip a
       1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
       valid_lft forever preferred_lft forever
    inet6 ::1/128 scope host
       valid_lft forever preferred_lft forever
2: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc mq state UP group default qlen 1000
    link/ether 00:15:5d:56:cd:13 brd ff:ff:ff:ff:ff:ff
    inet 192.168.86.39/24 brd 192.168.86.255 scope global noprefixroute eth0
       valid_lft forever preferred_lft forever
    inet6 fe80::bdf6:bea7:cff1:637d/64 scope link noprefixroute
       valid_lft forever preferred_lft forever


       yum install qemu-kvm qemu-img virt-manager libvirt libvirt-python libvirt-client virt-install virt-viewer bridge-utils

        optimised list
       yum install qemu-kvm virt-manager
                    qemu-img  libvirt libvirt-python libvirt-client virt-install virt-viewer bridge-utils


       systemctl start libvirtd
       systemctl enable libvirtd

       ip a

       1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
       valid_lft forever preferred_lft forever
    inet6 ::1/128 scope host
       valid_lft forever preferred_lft forever
2: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc mq state UP group default qlen 1000
    link/ether 00:15:5d:56:cd:13 brd ff:ff:ff:ff:ff:ff
    inet 192.168.86.39/24 brd 192.168.86.255 scope global noprefixroute eth0
       valid_lft forever preferred_lft forever
    inet6 fe80::bdf6:bea7:cff1:637d/64 scope link noprefixroute
       valid_lft forever preferred_lft forever
3: virbr0: <NO-CARRIER,BROADCAST,MULTICAST,UP> mtu 1500 qdisc noqueue state DOWN group default qlen 1000
    link/ether 52:54:00:fe:5d:35 brd ff:ff:ff:ff:ff:ff
    inet 192.168.122.1/24 brd 192.168.122.255 scope global virbr0
       valid_lft forever preferred_lft forever
4: virbr0-nic: <BROADCAST,MULTICAST> mtu 1500 qdisc pfifo_fast master virbr0 state DOWN group default qlen 1000
    link/ether 52:54:00:fe:5d:35 brd ff:ff:ff:ff:ff:ff

    [root@centoskvm ~]# lsmod | grep kvm
kvm_intel             174841  0
kvm                   578518  1 kvm_intel
irqbypass              13503  1 kvm



yum install "@X Window System" xorg-x11-xauth xorg-x11-fonts-* xorg-x11-utils -y

shutdown -r 0
doesn't work
virt-manager



cd /etc/sysconfig/network-scripts/
cp ifcfg-eth0 ifcfg-br0
edit them
ifcfg-br0
======================
TYPE="Bridge"
PROXY_METHOD="none"
BROWSER_ONLY="no"
BOOTPROTO="static"
DEFROUTE="yes"
IPV4_FAILURE_FATAL="no"
IPV6INIT="yes"
IPV6_AUTOCONF="yes"
IPV6_DEFROUTE="yes"
IPV6_FAILURE_FATAL="no"
IPV6_ADDR_GEN_MODE="stable-privacy"
NAME="br0"
DEVICE="br0"
ONBOOT="yes"
DNS1="192.168.86.1"
GATEWAY="192.168.86.1"
IPADDR="192.168.86.39"
NETMASK="255.255.255.0"

ifcfg-eth0
==================
TYPE="Ethernet"
BOOTPROTO="static"
DEVICE="eth0"
NAME="eth0"
ONBOOT=yes
BRIDGE=br0
UUID="2e65d074-9c84-4986-9696-f2d26a6275a2"
  
  
  (backup)
  ====================
  [root@centoskvm network-scripts]# ifcfg-br0
-bash: ifcfg-br0: command not found
[root@centoskvm network-scripts]# ifcfg-eth0
-bash: ifcfg-eth0: command not found
[root@centoskvm network-scripts]# cat ifcfg-eth0
TYPE="Ethernet"
PROXY_METHOD="none"
BROWSER_ONLY="no"
BOOTPROTO="static"
DEFROUTE="yes"
IPV4_FAILURE_FATAL="no"
IPV6INIT="yes"
IPV6_AUTOCONF="yes"
IPV6_DEFROUTE="yes"
IPV6_FAILURE_FATAL="no"
IPV6_ADDR_GEN_MODE="stable-privacy"
NAME="eth0"
UUID="2e65d074-9c84-4986-9696-f2d26a6275a2"
DEVICE="eth0"
ONBOOT="yes"
DNS1="192.168.86.1"
GATEWAY="192.168.86.1"
IPADDR="192.168.86.39"
NETMASK="255.255.255.0"


I didn't do 3 and 4
3. Enable network forwarding. Add to /etc/sysctl.conf :
 
 
net.ipv4.ip_forward = 1 
 
And read the file: 
 
# sysctl -p /etc/sysctl.conf 
 
4. Restart the ‘NetworkManager’ service so that the bridge you just created can get an IP address: 
# systemctl restart NetworkManager 

see whitepaper on kickstart files pdf in git.
sample kickstart files
https://github.com/CentOS/Community-Kickstarts/blob/5b4f7724d1b1df920da6051192b7bb0ca67d3299/kvm-host.cfg
[root@linuxtechi ~]# 
virt-install --name="centoskvm1" --file=/mnt/vmdisk/centosvm1.dsk --file-size=100 --nonsparse --graphics none --vcpus=1 --ram=2048 -l=/mnt/iso/CentOS-7-x86_64-Minimal-1804.iso --network bridge=br0 --os-type=linux --os-variant=generic

virt-install --name="centoskvm3" --file=/mnt/vmdisk/centosvm3.dsk --file-size=100 --nonsparse --graphics none --vcpus=1 --ram=1024 --location=/mnt/iso/CentOS-7-x86_64-Minimal-1804.iso --network bridge=br0 --os-type=linux --os-variant=centos7.0 --extra-args="console=tty0 console=ttyS0,115200"

virt-install --name="centoskvm1" --file=/mnt/vmdisk/centosvm1.dsk --file-size=100 --nonsparse --graphics spice --vcpus=1 --ram=2048 -l=/mnt/iso/CentOS-7-x86_64-Minimal-1804.iso --network bridge=br0 --os-type=linux --os-variant=generic
virt-install --name="centoskvm2" --file=/mnt/vmdisk/centosvm2.dsk --file-size=100 --nonsparse --graphics spice --vcpus=1 --ram=2048 -l=/mnt/iso/CentOS-7-x86_64-Minimal-1804.iso --network bridge=br0 --os-type=linux --os-variant=generic

virt-manager

virsh undefine centoskvm1

https://lintut.com/how-to-setup-network-after-rhelcentos-7-minimal-installation/
https://lintut.com/how-to-configure-static-ip-address-on-centos-7/


centoskvm1 192.168.86.36
centoskvm2 192.168.86.26


–name = <Name of the Virtual Machine>
–file = <Location where our virtual machine disk file will be stored >
–file-size = < Size of the Virtual Machine, in my case it is 20GB >
–nonsparse = < Allocate the whole storage while creating>
–graphics = < Specify the graphical tool for interactive installation, in above example I am using spice >
–vcpu = < Number of virtual CPU for the Machine >
–ram = < RAM size for the virtual Machine >
–cdrom = < Virtual CD ROM which specify the installation media like ISO file >
–network = < it is used to specify which network we will use for the virtual machine, in this example I am bridge interface>
–os-type = < Operating system type like linux and window>
–os-variant= <KVM maintains the OS variants like ‘fedora18′, ‘rhel6’ and ‘winxp’ , this option is optional and if you not sure about OS variant you can mentioned it as generic>

virsh


If you do not have an X server running on your host, connecting to a VMs serial console might be the only way to login to a VM if networking is not available. Setting up access to a VM’s console is no different than in a physical server, where you simply add the proper kernel boot parameters to the VM. For example, for a RHEL VM, append the following parameters to the kernel boot line in /etc/grub.conf
 and then reboot the VM: 
 
console=tty0 console=ttyS0,115200 


find ips for vms
https://unix.stackexchange.com/questions/33191/how-to-find-the-ip-address-of-a-kvm-virtual-machine-that-i-can-ssh-into-it

yum install nmap

virsh domiflist centoskvm2
nmap -sP 192.168.86.0/24 | grep  52:54:00:be:63:40 -B 3 -i

$ arp -n

If arp isn't installed on your system just install the net-tools package.


====================== Ansible
sudo yum install epel-release
sudo yum install ansible


vi invertory
[servers]
centoskvm1 ansible_ssh_host=192.168.86.36
centoskvm2 ansible_ssh_host=192.168.86.26

[webservers]
centoskvm1

[dc:children]
webservers

[dc:vars]
ansible_ssh_user=root
ansible_ssh_pass=bilbo000


using new structure

ansible webservers -i inventory_prod -m user -a "name={{username}} password=12345"


https://docs.ansible.com/ansible/latest/installation_guide/intro_configuration.html
https://docs.ansible.com/ansible/latest/reference_appendices/config.html#ansible-configuration-settings-locations
ansible config order (first one wins)
#ANSIBLE_CONFIG
./ansible.config~/.ansible.config
/etc/ansible/ansible.cfg

can override specfic settings in environment vars $ANSIBLE_<setting>=??
use export 
export ANSIBLE_FORKS=10


yum -a "name=httpd state=present" --sudo
ansible webservers -i inventory_prod -m service -a "name=httpd state=started enabled=yes" --sudo

ansible webservers -i inventory_prod -m service -a "name=iptables state=stopped"
ansible webservers -i inventory_prod -m service -a "name=firewalld state=stopped"


 ansible dc -i inventwebservers -i inventory_prod -m setup -a"filter=ansible_mounts"
 ansible dc -i inventory_prod -m setup --tree ./setup




